// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SocialGuard.Api.Data;

#nullable disable

namespace SocialGuard.Api.Migrations.ApiDb
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20220326213748_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SocialGuard.Common.Data.Models.Emitter", b =>
                {
                    b.Property<string>("Login")
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("display_name");

                    b.Property<byte>("EmitterType")
                        .HasColumnType("smallint")
                        .HasColumnName("emitter_type");

                    b.Property<decimal>("Snowflake")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("snowflake");

                    b.HasKey("Login")
                        .HasName("pk_emitters");

                    b.ToTable("emitters", (string)null);
                });

            modelBuilder.Entity("SocialGuard.Common.Data.Models.TrustlistEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("EmitterLogin")
                        .HasColumnType("text")
                        .HasColumnName("emitter_login");

                    b.Property<DateTime>("EntryAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("entry_at");

                    b.Property<byte>("EscalationLevel")
                        .HasColumnType("smallint")
                        .HasColumnName("escalation_level");

                    b.Property<string>("EscalationNote")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("escalation_note");

                    b.Property<DateTime>("LastEscalated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_escalated");

                    b.Property<decimal?>("TrustlistUserId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("trustlist_user_id");

                    b.HasKey("Id")
                        .HasName("pk_trustlist_entries");

                    b.HasIndex("EmitterLogin")
                        .HasDatabaseName("ix_trustlist_entries_emitter_login");

                    b.HasIndex("TrustlistUserId")
                        .HasDatabaseName("ix_trustlist_entries_trustlist_user_id");

                    b.ToTable("trustlist_entries", (string)null);
                });

            modelBuilder.Entity("SocialGuard.Common.Data.Models.TrustlistUser", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("id");

                    b.HasKey("Id")
                        .HasName("pk_trustlist_users");

                    b.ToTable("trustlist_users", (string)null);
                });

            modelBuilder.Entity("SocialGuard.Common.Data.Models.TrustlistEntry", b =>
                {
                    b.HasOne("SocialGuard.Common.Data.Models.Emitter", "Emitter")
                        .WithMany()
                        .HasForeignKey("EmitterLogin")
                        .HasConstraintName("fk_trustlist_entries_emitters_emitter_login");

                    b.HasOne("SocialGuard.Common.Data.Models.TrustlistUser", null)
                        .WithMany("Entries")
                        .HasForeignKey("TrustlistUserId")
                        .HasConstraintName("fk_trustlist_entries_trustlist_users_trustlist_user_id");

                    b.Navigation("Emitter");
                });

            modelBuilder.Entity("SocialGuard.Common.Data.Models.TrustlistUser", b =>
                {
                    b.Navigation("Entries");
                });
#pragma warning restore 612, 618
        }
    }
}
